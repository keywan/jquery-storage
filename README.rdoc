= jquery.cookie2

A feature-rich jQuery plugin for reading, writing and deleting cookies.

== Goals

=== compatibility with jquery.cookie
It is full backward compatible with jquery.cookie

=== get all features
Try to merge nearly all ideas from the comunity.
If code is incompatible make the idea behind posible.
If a problem is solveable one way, remove the other options as noone request them to be back.

== status
Storage Support was added
$.cookie.defaults.useLocalStorage = 1;
will enable LocalStorage if available but will fallback to sessionStorage or cookieStorage if not.

The getAll-Method is not compatible with the Storage Interface it is supposed to to be changed.

if you need a stable api you can rely on the old API
the new API is "new" so there is a minor chance that some things will be changed.


== Installation

Include script *after* the jQuery library (unless you are packaging scripts somehow else):

    <script src="/path/to/jquery.cookie.js"></script>

== Usage Old-stable Function API

Test to see if cookies are enabled:

    $.cookie();

Create session cookie:

    $.cookie('the_cookie', 'the_value');

Create expiring cookie, 7 days from then:

    $.cookie('the_cookie', 'the_value', { expires: 7 });

Create expiring cookie, valid across entire page:

    $.cookie('the_cookie', 'the_value', { expires: 7, path: '/' });

Read cookie:

    $.cookie('the_cookie'); // => 'the_value'
    $.cookie('not_existing'); // => null

Delete cookie:

    $.cookie('the_cookie',null);
	Note when clearing cookies, you must pass the exact same options that were used to initially set the cookie.

== Usage Object/Storage API
    there are 3 APIs
    * The CookieStorage API providing a object to get and set cookies
      var cm = new $.storage.cookieStorage(options);
    * The Storage API providing a webStorage with fallback to Cookies, that can only store plain strings
      var cm = $.storage(options);
    * The Object Storage API providing a Highlevel API for saving objects by using JSON
      var cm = $.objectStorage.getStorage(options) or new $.objectStorage(storage)
    
    cm.setItem(key,value);
    cm.getItem(key);
    cm.removeItem(key);

== Options

    expires: 365

Define lifetime of the cookie. Value can be a +Number+ (which will be interpreted as days from time of creation) or a +Date+ object. If omitted, the cookie is a session cookie.

    path: '/'

Default: path of page where the cookie was created.

Define the path where cookie is valid. <b>By default the path of the cookie is the path of the page where the cookie was created (standard browser behavior).</b> If you want to make it available for instance across the entire page use <code>path: '/'</code>. If you want to delete a cookie with a particular path, you need to include that path in the call.

    domain: 'example.com'

Default: domain of page where the cookie was created.

    secure: true

Default: +false+. If true, the cookie transmission requires a secure protocol (https).

    raw: true

Default: +false+.

By default the cookie is encoded/decoded when creating/reading, using +encodeURIComponent+/+decodeURIComponent+. Turn off by setting <code>raw: true</code>.

== Changelog

== Development

- Source hosted at {GitHub}[https://github.com/carhartl/jquery-cookie]
- Report issues, questions, feature requests on {GitHub Issues}[https://github.com/carhartl/jquery-cookie/issues]

Pull requests are very welcome! Make sure your patches are well tested. Please create a topic branch for every separate change you make.

== Authors

{David Bj√∂rklund}[https://github.com/kesla]
{Klaus Hartl}[https://github.com/carhartl] (original author)
